ARM GAS  /tmp/cca8jX7X.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"lcd_stm32f0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/lcd_stm32f0.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB45:
   1:Core/Src/lcd_stm32f0.c **** //********************************************************************
   2:Core/Src/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Src/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Src/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Src/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Src/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Src/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Src/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
   9:Core/Src/lcd_stm32f0.c **** //* PORTED:	   2014						     *
  10:Core/Src/lcd_stm32f0.c **** //* MODIFIED:      03-08-2015                                        *
  11:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  12:Core/Src/lcd_stm32f0.c **** //* PROGRAMMED IN: ECLIPSE IDE Luna Service Release 1 (4.4.1)        *
  13:Core/Src/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  14:Core/Src/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C6                    *
  15:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  16:Core/Src/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  17:Core/Src/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  18:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  19:Core/Src/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  20:Core/Src/lcd_stm32f0.c **** //*                - Two lines used                                  *
  21:Core/Src/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  22:Core/Src/lcd_stm32f0.c **** //*==================================================================*
  23:Core/Src/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  24:Core/Src/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  25:Core/Src/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  26:Core/Src/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  27:Core/Src/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  28:Core/Src/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  29:Core/Src/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
  30:Core/Src/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
  31:Core/Src/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
ARM GAS  /tmp/cca8jX7X.s 			page 2


  32:Core/Src/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  33:Core/Src/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  34:Core/Src/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  35:Core/Src/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  36:Core/Src/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  37:Core/Src/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  38:Core/Src/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  39:Core/Src/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  40:Core/Src/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  41:Core/Src/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  42:Core/Src/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  43:Core/Src/lcd_stm32f0.c **** //********************************************************************
  44:Core/Src/lcd_stm32f0.c **** // INCLUDE FILES
  45:Core/Src/lcd_stm32f0.c **** //====================================================================
  46:Core/Src/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  47:Core/Src/lcd_stm32f0.c **** #include "stm32f0xx.h"
  48:Core/Src/lcd_stm32f0.c **** //====================================================================
  49:Core/Src/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  50:Core/Src/lcd_stm32f0.c **** //====================================================================
  51:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  52:Core/Src/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  53:Core/Src/lcd_stm32f0.c **** //
  54:Core/Src/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  55:Core/Src/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  56:Core/Src/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  57:Core/Src/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  58:Core/Src/lcd_stm32f0.c **** //              These sets must be transmitted
  59:Core/Src/lcd_stm32f0.c **** //====================================================================
  60:Core/Src/lcd_stm32f0.c **** // USEFUL COMMANDS:
  61:Core/Src/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  62:Core/Src/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  63:Core/Src/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  64:Core/Src/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  65:Core/Src/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  66:Core/Src/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  67:Core/Src/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  68:Core/Src/lcd_stm32f0.c **** //
  69:Core/Src/lcd_stm32f0.c **** //====================================================================
  70:Core/Src/lcd_stm32f0.c **** 
  71:Core/Src/lcd_stm32f0.c **** void lcd_command(unsigned char command)
  72:Core/Src/lcd_stm32f0.c **** {
  73:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
  74:Core/Src/lcd_stm32f0.c **** 
  75:Core/Src/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
  76:Core/Src/lcd_stm32f0.c **** // DATALINE 7
  77:Core/Src/lcd_stm32f0.c ****     if ((command & 0x80) != 0)		// Select bit 7 of command, if HIGH set Data line 7 (D7) 
  78:Core/Src/lcd_stm32f0.c ****     {
  79:Core/Src/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
  80:Core/Src/lcd_stm32f0.c ****     }
  81:Core/Src/lcd_stm32f0.c ****     else				// else RESET D7
  82:Core/Src/lcd_stm32f0.c ****     {
  83:Core/Src/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
  84:Core/Src/lcd_stm32f0.c ****     }
  85:Core/Src/lcd_stm32f0.c **** // DATALINE 6
  86:Core/Src/lcd_stm32f0.c ****     if ((command & 0x40) != 0)		// Select bit 6 of command, if HIGH set Data line 6 (D6) 
  87:Core/Src/lcd_stm32f0.c ****     {
  88:Core/Src/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
ARM GAS  /tmp/cca8jX7X.s 			page 3


  89:Core/Src/lcd_stm32f0.c ****     }
  90:Core/Src/lcd_stm32f0.c ****     else				// else RESET D6
  91:Core/Src/lcd_stm32f0.c ****     {
  92:Core/Src/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
  93:Core/Src/lcd_stm32f0.c ****     }
  94:Core/Src/lcd_stm32f0.c **** // DATALINE 5
  95:Core/Src/lcd_stm32f0.c ****     if ((command & 0x20) != 0)		// Select bit 5 of command, if HIGH set Data line 5 (D5)
  96:Core/Src/lcd_stm32f0.c ****     {
  97:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;	
  98:Core/Src/lcd_stm32f0.c ****     }
  99:Core/Src/lcd_stm32f0.c ****     else				// else RESET D5
 100:Core/Src/lcd_stm32f0.c ****     {
 101:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 102:Core/Src/lcd_stm32f0.c ****     }
 103:Core/Src/lcd_stm32f0.c **** // DATALINE 4
 104:Core/Src/lcd_stm32f0.c ****     if ((command & 0x10) != 0)		// Select bit 4 of command, if HIGH set Data line 4 (D4)
 105:Core/Src/lcd_stm32f0.c ****     {
 106:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 107:Core/Src/lcd_stm32f0.c ****     }
 108:Core/Src/lcd_stm32f0.c ****     else				//  else RESET D4
 109:Core/Src/lcd_stm32f0.c ****     {
 110:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 111:Core/Src/lcd_stm32f0.c ****     }
 112:Core/Src/lcd_stm32f0.c **** 
 113:Core/Src/lcd_stm32f0.c ****     pulse_strobe ();			// Send data
 114:Core/Src/lcd_stm32f0.c **** 
 115:Core/Src/lcd_stm32f0.c **** // lower nibble to data lines
 116:Core/Src/lcd_stm32f0.c ****     if ((command & 0x08) != 0)		// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 117:Core/Src/lcd_stm32f0.c ****     {
 118:Core/Src/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
 119:Core/Src/lcd_stm32f0.c ****     }
 120:Core/Src/lcd_stm32f0.c ****     else				// else RESET D7
 121:Core/Src/lcd_stm32f0.c ****     {
 122:Core/Src/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
 123:Core/Src/lcd_stm32f0.c ****     }
 124:Core/Src/lcd_stm32f0.c **** // DATALINE 6
 125:Core/Src/lcd_stm32f0.c ****     if ((command & 0x04) != 0)		// Select bit 2 of command, if HIGH set Data line 6 (D6)
 126:Core/Src/lcd_stm32f0.c ****     {
 127:Core/Src/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
 128:Core/Src/lcd_stm32f0.c ****     }
 129:Core/Src/lcd_stm32f0.c ****     else				//  else RESET D6
 130:Core/Src/lcd_stm32f0.c ****     {
 131:Core/Src/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
 132:Core/Src/lcd_stm32f0.c ****     }
 133:Core/Src/lcd_stm32f0.c ****     // DATALINE 5
 134:Core/Src/lcd_stm32f0.c ****     if ((command & 0x02) != 0)		// Select bit 1 of command, if HIGH set Data line 5 (D5)
 135:Core/Src/lcd_stm32f0.c ****     {
 136:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;         
 137:Core/Src/lcd_stm32f0.c ****     }
 138:Core/Src/lcd_stm32f0.c ****     else				//  else RESET D5
 139:Core/Src/lcd_stm32f0.c ****     {
 140:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 141:Core/Src/lcd_stm32f0.c ****     }
 142:Core/Src/lcd_stm32f0.c ****     // DATALINE 4
 143:Core/Src/lcd_stm32f0.c ****     if ((command & 0x01) != 0)		// Select bit 0 of command, if HIGH set Data line 4 (D4)
 144:Core/Src/lcd_stm32f0.c ****     {
 145:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
ARM GAS  /tmp/cca8jX7X.s 			page 4


 146:Core/Src/lcd_stm32f0.c ****     }
 147:Core/Src/lcd_stm32f0.c ****     else				//  else RESET D4
 148:Core/Src/lcd_stm32f0.c ****     {
 149:Core/Src/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 150:Core/Src/lcd_stm32f0.c ****     }
 151:Core/Src/lcd_stm32f0.c **** 
 152:Core/Src/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 153:Core/Src/lcd_stm32f0.c ****     delay(3000);
 154:Core/Src/lcd_stm32f0.c **** }
 155:Core/Src/lcd_stm32f0.c **** 
 156:Core/Src/lcd_stm32f0.c **** //====================================================================
 157:Core/Src/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
 158:Core/Src/lcd_stm32f0.c **** //====================================================================
 159:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
 160:Core/Src/lcd_stm32f0.c **** //              intialises the module for use.
 161:Core/Src/lcd_stm32f0.c **** //====================================================================
 162:Core/Src/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
 163:Core/Src/lcd_stm32f0.c **** //                - Two lines used
 164:Core/Src/lcd_stm32f0.c **** //                - Flashing cursor
 165:Core/Src/lcd_stm32f0.c **** //====================================================================
 166:Core/Src/lcd_stm32f0.c **** 
 167:Core/Src/lcd_stm32f0.c **** void init_LCD(void)
 168:Core/Src/lcd_stm32f0.c **** {
 169:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 170:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 171:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 172:Core/Src/lcd_stm32f0.c **** 
 173:Core/Src/lcd_stm32f0.c ****     GPIOA->MODER |= (GPIO_MODER_MODER12_0|GPIO_MODER_MODER15_0); // D6 and D7
 174:Core/Src/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 175:Core/Src/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 176:Core/Src/lcd_stm32f0.c **** 
 177:Core/Src/lcd_stm32f0.c ****     delay(30000);			// Allow the LCD some power up time (~30ms)
 178:Core/Src/lcd_stm32f0.c **** 
 179:Core/Src/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 180:Core/Src/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 181:Core/Src/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 182:Core/Src/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 183:Core/Src/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 184:Core/Src/lcd_stm32f0.c **** }
 185:Core/Src/lcd_stm32f0.c **** 
 186:Core/Src/lcd_stm32f0.c **** //====================================================================
 187:Core/Src/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 188:Core/Src/lcd_stm32f0.c **** //====================================================================
 189:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 190:Core/Src/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 191:Core/Src/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 192:Core/Src/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 193:Core/Src/lcd_stm32f0.c **** //
 194:Core/Src/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 195:Core/Src/lcd_stm32f0.c **** //              set information.
 196:Core/Src/lcd_stm32f0.c **** //====================================================================
 197:Core/Src/lcd_stm32f0.c **** 
 198:Core/Src/lcd_stm32f0.c ****  void lcd_putchar(unsigned char character)
 199:Core/Src/lcd_stm32f0.c **** {
 200:Core/Src/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 201:Core/Src/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 202:Core/Src/lcd_stm32f0.c **** // DATALINE 7
ARM GAS  /tmp/cca8jX7X.s 			page 5


 203:Core/Src/lcd_stm32f0.c ****         if ((character & 0x80) != 0) 	// Select bit 7 of command, if HIGH set Data line 7 (D7)
 204:Core/Src/lcd_stm32f0.c ****         {
 205:Core/Src/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 206:Core/Src/lcd_stm32f0.c ****         }
 207:Core/Src/lcd_stm32f0.c ****         else				//  else RESET D7
 208:Core/Src/lcd_stm32f0.c ****         {
 209:Core/Src/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 210:Core/Src/lcd_stm32f0.c ****         }
 211:Core/Src/lcd_stm32f0.c ****         // DATALINE 6
 212:Core/Src/lcd_stm32f0.c ****         if ((character & 0x40) != 0)	// Select bit 6 of command, if HIGH set Data line 6 (D6)      
 213:Core/Src/lcd_stm32f0.c **** 	{
 214:Core/Src/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 215:Core/Src/lcd_stm32f0.c ****         }
 216:Core/Src/lcd_stm32f0.c ****         else				//  else RESET D6
 217:Core/Src/lcd_stm32f0.c **** 
 218:Core/Src/lcd_stm32f0.c ****         {
 219:Core/Src/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 220:Core/Src/lcd_stm32f0.c ****         }
 221:Core/Src/lcd_stm32f0.c **** // DATALINE 5
 222:Core/Src/lcd_stm32f0.c ****         if ((character & 0x20) != 0)	// Select bit 5 of command, if HIGH set Data line 5 (D5)
 223:Core/Src/lcd_stm32f0.c **** 
 224:Core/Src/lcd_stm32f0.c ****         {
 225:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;                 
 226:Core/Src/lcd_stm32f0.c **** 	}
 227:Core/Src/lcd_stm32f0.c ****         else				//  else RESET D5
 228:Core/Src/lcd_stm32f0.c ****         {
 229:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 230:Core/Src/lcd_stm32f0.c ****         }
 231:Core/Src/lcd_stm32f0.c **** // DATALINE 4
 232:Core/Src/lcd_stm32f0.c ****         if ((character & 0x10) != 0)	// Select bit 4 of command, if HIGH set Data line 4 (D4) 
 233:Core/Src/lcd_stm32f0.c ****         {
 234:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 235:Core/Src/lcd_stm32f0.c ****         }
 236:Core/Src/lcd_stm32f0.c ****         else				// else RESET D4
 237:Core/Src/lcd_stm32f0.c ****         {
 238:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 239:Core/Src/lcd_stm32f0.c ****         }
 240:Core/Src/lcd_stm32f0.c **** 
 241:Core/Src/lcd_stm32f0.c ****         pulse_strobe ();		// Send data
 242:Core/Src/lcd_stm32f0.c **** 
 243:Core/Src/lcd_stm32f0.c **** // lower nibble to data lines
 244:Core/Src/lcd_stm32f0.c ****         if ((character & 0x08) != 0)	// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 245:Core/Src/lcd_stm32f0.c ****         {
 246:Core/Src/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 247:Core/Src/lcd_stm32f0.c ****         }
 248:Core/Src/lcd_stm32f0.c ****         else				// else RESET D7
 249:Core/Src/lcd_stm32f0.c ****         {
 250:Core/Src/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 251:Core/Src/lcd_stm32f0.c ****         }
 252:Core/Src/lcd_stm32f0.c **** // DATALINE 6
 253:Core/Src/lcd_stm32f0.c ****         if ((character & 0x04) != 0)	// Select bit 2 of command, if HIGH set Data line 6 (D6)      
 254:Core/Src/lcd_stm32f0.c **** 	{
 255:Core/Src/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 256:Core/Src/lcd_stm32f0.c ****         }
 257:Core/Src/lcd_stm32f0.c ****         else				// else RESET D6
 258:Core/Src/lcd_stm32f0.c **** 
 259:Core/Src/lcd_stm32f0.c ****         {
ARM GAS  /tmp/cca8jX7X.s 			page 6


 260:Core/Src/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 261:Core/Src/lcd_stm32f0.c ****         }
 262:Core/Src/lcd_stm32f0.c **** // DATALINE 5
 263:Core/Src/lcd_stm32f0.c ****         if ((character & 0x02) != 0)	// Select bit 1 of command, if HIGH set Data line 5 (D5)  
 264:Core/Src/lcd_stm32f0.c ****         {
 265:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;       
 266:Core/Src/lcd_stm32f0.c **** 	}
 267:Core/Src/lcd_stm32f0.c ****         else				// else RESET D5
 268:Core/Src/lcd_stm32f0.c ****         {
 269:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 270:Core/Src/lcd_stm32f0.c ****         }
 271:Core/Src/lcd_stm32f0.c **** // DATALINE 4
 272:Core/Src/lcd_stm32f0.c ****         if ((character & 0x01) != 0)	// Select bit 0 of command, if HIGH set Data line 4 (D4)
 273:Core/Src/lcd_stm32f0.c ****         {
 274:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 275:Core/Src/lcd_stm32f0.c ****         }
 276:Core/Src/lcd_stm32f0.c ****         else				//  else RESET D4
 277:Core/Src/lcd_stm32f0.c ****         {
 278:Core/Src/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 279:Core/Src/lcd_stm32f0.c ****         }
 280:Core/Src/lcd_stm32f0.c **** 
 281:Core/Src/lcd_stm32f0.c ****         pulse_strobe();			// Send data
 282:Core/Src/lcd_stm32f0.c **** }
 283:Core/Src/lcd_stm32f0.c **** 
 284:Core/Src/lcd_stm32f0.c **** //====================================================================
 285:Core/Src/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 286:Core/Src/lcd_stm32f0.c **** //====================================================================
 287:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 288:Core/Src/lcd_stm32f0.c **** //====================================================================
 289:Core/Src/lcd_stm32f0.c **** 
 290:Core/Src/lcd_stm32f0.c **** void lcd_putstring(char *instring)
 291:Core/Src/lcd_stm32f0.c **** {
 292:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 293:Core/Src/lcd_stm32f0.c **** 
 294:Core/Src/lcd_stm32f0.c ****     while (instring[count])		// Until the null terminator is reached
 295:Core/Src/lcd_stm32f0.c ****     {
 296:Core/Src/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 297:Core/Src/lcd_stm32f0.c **** 	    count++;
 298:Core/Src/lcd_stm32f0.c **** 	 }
 299:Core/Src/lcd_stm32f0.c **** }
 300:Core/Src/lcd_stm32f0.c **** 
 301:Core/Src/lcd_stm32f0.c **** 
 302:Core/Src/lcd_stm32f0.c **** //====================================================================
 303:Core/Src/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 304:Core/Src/lcd_stm32f0.c **** //====================================================================
 305:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 306:Core/Src/lcd_stm32f0.c **** //====================================================================
 307:Core/Src/lcd_stm32f0.c **** 
 308:Core/Src/lcd_stm32f0.c **** void pulse_strobe(void)
 309:Core/Src/lcd_stm32f0.c **** {
 310:Core/Src/lcd_stm32f0.c ****     delay(20);				// Delay
 311:Core/Src/lcd_stm32f0.c **** 
 312:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 313:Core/Src/lcd_stm32f0.c **** 
 314:Core/Src/lcd_stm32f0.c ****     delay(20);				// Delay
 315:Core/Src/lcd_stm32f0.c **** 
 316:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
ARM GAS  /tmp/cca8jX7X.s 			page 7


 317:Core/Src/lcd_stm32f0.c **** 
 318:Core/Src/lcd_stm32f0.c ****     delay(20);				// Delay
 319:Core/Src/lcd_stm32f0.c **** 
 320:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 321:Core/Src/lcd_stm32f0.c **** }
 322:Core/Src/lcd_stm32f0.c **** 
 323:Core/Src/lcd_stm32f0.c **** 
 324:Core/Src/lcd_stm32f0.c **** //====================================================================
 325:Core/Src/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 326:Core/Src/lcd_stm32f0.c **** //====================================================================
 327:Core/Src/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 328:Core/Src/lcd_stm32f0.c **** //====================================================================
 329:Core/Src/lcd_stm32f0.c **** 
 330:Core/Src/lcd_stm32f0.c **** void delay(unsigned int microseconds)
 331:Core/Src/lcd_stm32f0.c **** {
  28              		.loc 1 331 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 331 1 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
 332:Core/Src/lcd_stm32f0.c **** 	  volatile unsigned int counter;
  37              		.loc 1 332 4 is_stmt 1 view .LVU2
 333:Core/Src/lcd_stm32f0.c **** 	  microseconds *= 3;
  38              		.loc 1 333 4 view .LVU3
  39              		.loc 1 333 17 is_stmt 0 view .LVU4
  40 0002 4300     		lsls	r3, r0, #1
  41 0004 1818     		adds	r0, r3, r0
  42              	.LVL1:
 334:Core/Src/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  43              		.loc 1 334 4 is_stmt 1 view .LVU5
  44              		.loc 1 334 16 is_stmt 0 view .LVU6
  45 0006 0023     		movs	r3, #0
  46 0008 0193     		str	r3, [sp, #4]
  47              		.loc 1 334 4 view .LVU7
  48 000a 04E0     		b	.L2
  49              	.L3:
 335:Core/Src/lcd_stm32f0.c **** 	  {
 336:Core/Src/lcd_stm32f0.c **** 	    __asm("nop");
  50              		.loc 1 336 6 is_stmt 1 discriminator 3 view .LVU8
  51              		.syntax divided
  52              	@ 336 "Core/Src/lcd_stm32f0.c" 1
  53 000c C046     		nop
  54              	@ 0 "" 2
 337:Core/Src/lcd_stm32f0.c **** 	    __asm("nop");
  55              		.loc 1 337 6 discriminator 3 view .LVU9
  56              	@ 337 "Core/Src/lcd_stm32f0.c" 1
  57 000e C046     		nop
  58              	@ 0 "" 2
 334:Core/Src/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  59              		.loc 1 334 50 discriminator 3 view .LVU10
  60              		.thumb
  61              		.syntax unified
  62 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cca8jX7X.s 			page 8


  63 0012 0133     		adds	r3, r3, #1
  64 0014 0193     		str	r3, [sp, #4]
  65              	.L2:
 334:Core/Src/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  66              		.loc 1 334 28 discriminator 1 view .LVU11
  67 0016 019B     		ldr	r3, [sp, #4]
  68 0018 8342     		cmp	r3, r0
  69 001a F7D3     		bcc	.L3
 338:Core/Src/lcd_stm32f0.c **** 	  }
 339:Core/Src/lcd_stm32f0.c **** }
  70              		.loc 1 339 1 is_stmt 0 view .LVU12
  71 001c 02B0     		add	sp, sp, #8
  72              		@ sp needed
  73 001e 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE45:
  77              		.section	.text.pulse_strobe,"ax",%progbits
  78              		.align	1
  79              		.global	pulse_strobe
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  84              	pulse_strobe:
  85              	.LFB44:
 309:Core/Src/lcd_stm32f0.c ****     delay(20);				// Delay
  86              		.loc 1 309 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
 310:Core/Src/lcd_stm32f0.c **** 
  97              		.loc 1 310 5 view .LVU14
  98 0002 1420     		movs	r0, #20
  99 0004 FFF7FEFF 		bl	delay
 100              	.LVL2:
 312:Core/Src/lcd_stm32f0.c **** 
 101              		.loc 1 312 5 view .LVU15
 312:Core/Src/lcd_stm32f0.c **** 
 102              		.loc 1 312 10 is_stmt 0 view .LVU16
 103 0008 0A4C     		ldr	r4, .L5
 104 000a A369     		ldr	r3, [r4, #24]
 312:Core/Src/lcd_stm32f0.c **** 
 105              		.loc 1 312 17 view .LVU17
 106 000c 8025     		movs	r5, #128
 107 000e 2D02     		lsls	r5, r5, #8
 108 0010 2B43     		orrs	r3, r5
 109 0012 A361     		str	r3, [r4, #24]
 314:Core/Src/lcd_stm32f0.c **** 
 110              		.loc 1 314 5 is_stmt 1 view .LVU18
 111 0014 1420     		movs	r0, #20
 112 0016 FFF7FEFF 		bl	delay
ARM GAS  /tmp/cca8jX7X.s 			page 9


 113              	.LVL3:
 316:Core/Src/lcd_stm32f0.c **** 
 114              		.loc 1 316 5 view .LVU19
 316:Core/Src/lcd_stm32f0.c **** 
 115              		.loc 1 316 10 is_stmt 0 view .LVU20
 116 001a A269     		ldr	r2, [r4, #24]
 316:Core/Src/lcd_stm32f0.c **** 
 117              		.loc 1 316 17 view .LVU21
 118 001c 8023     		movs	r3, #128
 119 001e 1B06     		lsls	r3, r3, #24
 120 0020 1343     		orrs	r3, r2
 121 0022 A361     		str	r3, [r4, #24]
 318:Core/Src/lcd_stm32f0.c **** 
 122              		.loc 1 318 5 is_stmt 1 view .LVU22
 123 0024 1420     		movs	r0, #20
 124 0026 FFF7FEFF 		bl	delay
 125              	.LVL4:
 320:Core/Src/lcd_stm32f0.c **** }
 126              		.loc 1 320 5 view .LVU23
 320:Core/Src/lcd_stm32f0.c **** }
 127              		.loc 1 320 10 is_stmt 0 view .LVU24
 128 002a A369     		ldr	r3, [r4, #24]
 320:Core/Src/lcd_stm32f0.c **** }
 129              		.loc 1 320 17 view .LVU25
 130 002c 1D43     		orrs	r5, r3
 131 002e A561     		str	r5, [r4, #24]
 321:Core/Src/lcd_stm32f0.c **** 
 132              		.loc 1 321 1 view .LVU26
 133              		@ sp needed
 134 0030 70BD     		pop	{r4, r5, r6, pc}
 135              	.L6:
 136 0032 C046     		.align	2
 137              	.L5:
 138 0034 00080048 		.word	1207961600
 139              		.cfi_endproc
 140              	.LFE44:
 142              		.section	.text.lcd_putchar,"ax",%progbits
 143              		.align	1
 144              		.global	lcd_putchar
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 149              	lcd_putchar:
 150              	.LVL5:
 151              	.LFB42:
 199:Core/Src/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 152              		.loc 1 199 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Src/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 156              		.loc 1 199 1 is_stmt 0 view .LVU28
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
ARM GAS  /tmp/cca8jX7X.s 			page 10


 162 0002 0400     		movs	r4, r0
 200:Core/Src/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 163              		.loc 1 200 2 is_stmt 1 view .LVU29
 200:Core/Src/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 164              		.loc 1 200 7 is_stmt 0 view .LVU30
 165 0004 454A     		ldr	r2, .L25
 166 0006 9169     		ldr	r1, [r2, #24]
 200:Core/Src/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 167              		.loc 1 200 14 view .LVU31
 168 0008 8023     		movs	r3, #128
 169 000a DB01     		lsls	r3, r3, #7
 170 000c 0B43     		orrs	r3, r1
 171 000e 9361     		str	r3, [r2, #24]
 203:Core/Src/lcd_stm32f0.c ****         {
 172              		.loc 1 203 9 is_stmt 1 view .LVU32
 203:Core/Src/lcd_stm32f0.c ****         {
 173              		.loc 1 203 32 is_stmt 0 view .LVU33
 174 0010 43B2     		sxtb	r3, r0
 203:Core/Src/lcd_stm32f0.c ****         {
 175              		.loc 1 203 12 view .LVU34
 176 0012 002B     		cmp	r3, #0
 177 0014 46DB     		blt	.L24
 209:Core/Src/lcd_stm32f0.c ****         }
 178              		.loc 1 209 10 is_stmt 1 view .LVU35
 209:Core/Src/lcd_stm32f0.c ****         }
 179              		.loc 1 209 15 is_stmt 0 view .LVU36
 180 0016 9022     		movs	r2, #144
 181 0018 D205     		lsls	r2, r2, #23
 182 001a 9169     		ldr	r1, [r2, #24]
 209:Core/Src/lcd_stm32f0.c ****         }
 183              		.loc 1 209 22 view .LVU37
 184 001c 8023     		movs	r3, #128
 185 001e 1B06     		lsls	r3, r3, #24
 186 0020 0B43     		orrs	r3, r1
 187 0022 9361     		str	r3, [r2, #24]
 188              	.L9:
 212:Core/Src/lcd_stm32f0.c **** 	{
 189              		.loc 1 212 9 is_stmt 1 view .LVU38
 212:Core/Src/lcd_stm32f0.c **** 	{
 190              		.loc 1 212 12 is_stmt 0 view .LVU39
 191 0024 6306     		lsls	r3, r4, #25
 192 0026 45D5     		bpl	.L10
 214:Core/Src/lcd_stm32f0.c ****         }
 193              		.loc 1 214 13 is_stmt 1 view .LVU40
 214:Core/Src/lcd_stm32f0.c ****         }
 194              		.loc 1 214 18 is_stmt 0 view .LVU41
 195 0028 9022     		movs	r2, #144
 196 002a D205     		lsls	r2, r2, #23
 197 002c 9169     		ldr	r1, [r2, #24]
 214:Core/Src/lcd_stm32f0.c ****         }
 198              		.loc 1 214 25 view .LVU42
 199 002e 8023     		movs	r3, #128
 200 0030 5B01     		lsls	r3, r3, #5
 201 0032 0B43     		orrs	r3, r1
 202 0034 9361     		str	r3, [r2, #24]
 203              	.L11:
 222:Core/Src/lcd_stm32f0.c **** 
ARM GAS  /tmp/cca8jX7X.s 			page 11


 204              		.loc 1 222 9 is_stmt 1 view .LVU43
 222:Core/Src/lcd_stm32f0.c **** 
 205              		.loc 1 222 12 is_stmt 0 view .LVU44
 206 0036 A306     		lsls	r3, r4, #26
 207 0038 44D5     		bpl	.L12
 225:Core/Src/lcd_stm32f0.c **** 	}
 208              		.loc 1 225 10 is_stmt 1 view .LVU45
 225:Core/Src/lcd_stm32f0.c **** 	}
 209              		.loc 1 225 15 is_stmt 0 view .LVU46
 210 003a 394A     		ldr	r2, .L25+4
 211 003c 9169     		ldr	r1, [r2, #24]
 225:Core/Src/lcd_stm32f0.c **** 	}
 212              		.loc 1 225 22 view .LVU47
 213 003e 8023     		movs	r3, #128
 214 0040 9B00     		lsls	r3, r3, #2
 215 0042 0B43     		orrs	r3, r1
 216 0044 9361     		str	r3, [r2, #24]
 217              	.L13:
 232:Core/Src/lcd_stm32f0.c ****         {
 218              		.loc 1 232 9 is_stmt 1 view .LVU48
 232:Core/Src/lcd_stm32f0.c ****         {
 219              		.loc 1 232 12 is_stmt 0 view .LVU49
 220 0046 E306     		lsls	r3, r4, #27
 221 0048 43D5     		bpl	.L14
 234:Core/Src/lcd_stm32f0.c ****         }
 222              		.loc 1 234 10 is_stmt 1 view .LVU50
 234:Core/Src/lcd_stm32f0.c ****         }
 223              		.loc 1 234 15 is_stmt 0 view .LVU51
 224 004a 354A     		ldr	r2, .L25+4
 225 004c 9169     		ldr	r1, [r2, #24]
 234:Core/Src/lcd_stm32f0.c ****         }
 226              		.loc 1 234 22 view .LVU52
 227 004e 8023     		movs	r3, #128
 228 0050 5B00     		lsls	r3, r3, #1
 229 0052 0B43     		orrs	r3, r1
 230 0054 9361     		str	r3, [r2, #24]
 231              	.L15:
 241:Core/Src/lcd_stm32f0.c **** 
 232              		.loc 1 241 9 is_stmt 1 view .LVU53
 233 0056 FFF7FEFF 		bl	pulse_strobe
 234              	.LVL6:
 244:Core/Src/lcd_stm32f0.c ****         {
 235              		.loc 1 244 9 view .LVU54
 244:Core/Src/lcd_stm32f0.c ****         {
 236              		.loc 1 244 12 is_stmt 0 view .LVU55
 237 005a 2307     		lsls	r3, r4, #28
 238 005c 40D5     		bpl	.L16
 246:Core/Src/lcd_stm32f0.c ****         }
 239              		.loc 1 246 10 is_stmt 1 view .LVU56
 246:Core/Src/lcd_stm32f0.c ****         }
 240              		.loc 1 246 15 is_stmt 0 view .LVU57
 241 005e 9022     		movs	r2, #144
 242 0060 D205     		lsls	r2, r2, #23
 243 0062 9169     		ldr	r1, [r2, #24]
 246:Core/Src/lcd_stm32f0.c ****         }
 244              		.loc 1 246 22 view .LVU58
 245 0064 8023     		movs	r3, #128
ARM GAS  /tmp/cca8jX7X.s 			page 12


 246 0066 1B02     		lsls	r3, r3, #8
 247 0068 0B43     		orrs	r3, r1
 248 006a 9361     		str	r3, [r2, #24]
 249              	.L17:
 253:Core/Src/lcd_stm32f0.c **** 	{
 250              		.loc 1 253 9 is_stmt 1 view .LVU59
 253:Core/Src/lcd_stm32f0.c **** 	{
 251              		.loc 1 253 12 is_stmt 0 view .LVU60
 252 006c 6307     		lsls	r3, r4, #29
 253 006e 3FD5     		bpl	.L18
 255:Core/Src/lcd_stm32f0.c ****         }
 254              		.loc 1 255 13 is_stmt 1 view .LVU61
 255:Core/Src/lcd_stm32f0.c ****         }
 255              		.loc 1 255 18 is_stmt 0 view .LVU62
 256 0070 9022     		movs	r2, #144
 257 0072 D205     		lsls	r2, r2, #23
 258 0074 9169     		ldr	r1, [r2, #24]
 255:Core/Src/lcd_stm32f0.c ****         }
 259              		.loc 1 255 25 view .LVU63
 260 0076 8023     		movs	r3, #128
 261 0078 5B01     		lsls	r3, r3, #5
 262 007a 0B43     		orrs	r3, r1
 263 007c 9361     		str	r3, [r2, #24]
 264              	.L19:
 263:Core/Src/lcd_stm32f0.c ****         {
 265              		.loc 1 263 9 is_stmt 1 view .LVU64
 263:Core/Src/lcd_stm32f0.c ****         {
 266              		.loc 1 263 12 is_stmt 0 view .LVU65
 267 007e A307     		lsls	r3, r4, #30
 268 0080 3ED5     		bpl	.L20
 265:Core/Src/lcd_stm32f0.c **** 	}
 269              		.loc 1 265 10 is_stmt 1 view .LVU66
 265:Core/Src/lcd_stm32f0.c **** 	}
 270              		.loc 1 265 15 is_stmt 0 view .LVU67
 271 0082 274A     		ldr	r2, .L25+4
 272 0084 9169     		ldr	r1, [r2, #24]
 265:Core/Src/lcd_stm32f0.c **** 	}
 273              		.loc 1 265 22 view .LVU68
 274 0086 8023     		movs	r3, #128
 275 0088 9B00     		lsls	r3, r3, #2
 276 008a 0B43     		orrs	r3, r1
 277 008c 9361     		str	r3, [r2, #24]
 278              	.L21:
 272:Core/Src/lcd_stm32f0.c ****         {
 279              		.loc 1 272 9 is_stmt 1 view .LVU69
 272:Core/Src/lcd_stm32f0.c ****         {
 280              		.loc 1 272 12 is_stmt 0 view .LVU70
 281 008e E407     		lsls	r4, r4, #31
 282 0090 3DD5     		bpl	.L22
 274:Core/Src/lcd_stm32f0.c ****         }
 283              		.loc 1 274 10 is_stmt 1 view .LVU71
 274:Core/Src/lcd_stm32f0.c ****         }
 284              		.loc 1 274 15 is_stmt 0 view .LVU72
 285 0092 234A     		ldr	r2, .L25+4
 286 0094 9169     		ldr	r1, [r2, #24]
 274:Core/Src/lcd_stm32f0.c ****         }
 287              		.loc 1 274 22 view .LVU73
ARM GAS  /tmp/cca8jX7X.s 			page 13


 288 0096 8023     		movs	r3, #128
 289 0098 5B00     		lsls	r3, r3, #1
 290 009a 0B43     		orrs	r3, r1
 291 009c 9361     		str	r3, [r2, #24]
 292              	.L23:
 281:Core/Src/lcd_stm32f0.c **** }
 293              		.loc 1 281 9 is_stmt 1 view .LVU74
 294 009e FFF7FEFF 		bl	pulse_strobe
 295              	.LVL7:
 282:Core/Src/lcd_stm32f0.c **** 
 296              		.loc 1 282 1 is_stmt 0 view .LVU75
 297              		@ sp needed
 298 00a2 10BD     		pop	{r4, pc}
 299              	.LVL8:
 300              	.L24:
 205:Core/Src/lcd_stm32f0.c ****         }
 301              		.loc 1 205 10 is_stmt 1 view .LVU76
 205:Core/Src/lcd_stm32f0.c ****         }
 302              		.loc 1 205 15 is_stmt 0 view .LVU77
 303 00a4 9022     		movs	r2, #144
 304 00a6 D205     		lsls	r2, r2, #23
 305 00a8 9169     		ldr	r1, [r2, #24]
 205:Core/Src/lcd_stm32f0.c ****         }
 306              		.loc 1 205 22 view .LVU78
 307 00aa 8023     		movs	r3, #128
 308 00ac 1B02     		lsls	r3, r3, #8
 309 00ae 0B43     		orrs	r3, r1
 310 00b0 9361     		str	r3, [r2, #24]
 311 00b2 B7E7     		b	.L9
 312              	.L10:
 219:Core/Src/lcd_stm32f0.c ****         }
 313              		.loc 1 219 13 is_stmt 1 view .LVU79
 219:Core/Src/lcd_stm32f0.c ****         }
 314              		.loc 1 219 18 is_stmt 0 view .LVU80
 315 00b4 9022     		movs	r2, #144
 316 00b6 D205     		lsls	r2, r2, #23
 317 00b8 9169     		ldr	r1, [r2, #24]
 219:Core/Src/lcd_stm32f0.c ****         }
 318              		.loc 1 219 25 view .LVU81
 319 00ba 8023     		movs	r3, #128
 320 00bc 5B05     		lsls	r3, r3, #21
 321 00be 0B43     		orrs	r3, r1
 322 00c0 9361     		str	r3, [r2, #24]
 323 00c2 B8E7     		b	.L11
 324              	.L12:
 229:Core/Src/lcd_stm32f0.c ****         }
 325              		.loc 1 229 10 is_stmt 1 view .LVU82
 229:Core/Src/lcd_stm32f0.c ****         }
 326              		.loc 1 229 15 is_stmt 0 view .LVU83
 327 00c4 164A     		ldr	r2, .L25+4
 328 00c6 9169     		ldr	r1, [r2, #24]
 229:Core/Src/lcd_stm32f0.c ****         }
 329              		.loc 1 229 22 view .LVU84
 330 00c8 8023     		movs	r3, #128
 331 00ca 9B04     		lsls	r3, r3, #18
 332 00cc 0B43     		orrs	r3, r1
 333 00ce 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cca8jX7X.s 			page 14


 334 00d0 B9E7     		b	.L13
 335              	.L14:
 238:Core/Src/lcd_stm32f0.c ****         }
 336              		.loc 1 238 10 is_stmt 1 view .LVU85
 238:Core/Src/lcd_stm32f0.c ****         }
 337              		.loc 1 238 15 is_stmt 0 view .LVU86
 338 00d2 134A     		ldr	r2, .L25+4
 339 00d4 9169     		ldr	r1, [r2, #24]
 238:Core/Src/lcd_stm32f0.c ****         }
 340              		.loc 1 238 22 view .LVU87
 341 00d6 8023     		movs	r3, #128
 342 00d8 5B04     		lsls	r3, r3, #17
 343 00da 0B43     		orrs	r3, r1
 344 00dc 9361     		str	r3, [r2, #24]
 345 00de BAE7     		b	.L15
 346              	.LVL9:
 347              	.L16:
 250:Core/Src/lcd_stm32f0.c ****         }
 348              		.loc 1 250 10 is_stmt 1 view .LVU88
 250:Core/Src/lcd_stm32f0.c ****         }
 349              		.loc 1 250 15 is_stmt 0 view .LVU89
 350 00e0 9022     		movs	r2, #144
 351 00e2 D205     		lsls	r2, r2, #23
 352 00e4 9169     		ldr	r1, [r2, #24]
 250:Core/Src/lcd_stm32f0.c ****         }
 353              		.loc 1 250 22 view .LVU90
 354 00e6 8023     		movs	r3, #128
 355 00e8 1B06     		lsls	r3, r3, #24
 356 00ea 0B43     		orrs	r3, r1
 357 00ec 9361     		str	r3, [r2, #24]
 358 00ee BDE7     		b	.L17
 359              	.L18:
 260:Core/Src/lcd_stm32f0.c ****         }
 360              		.loc 1 260 13 is_stmt 1 view .LVU91
 260:Core/Src/lcd_stm32f0.c ****         }
 361              		.loc 1 260 18 is_stmt 0 view .LVU92
 362 00f0 9022     		movs	r2, #144
 363 00f2 D205     		lsls	r2, r2, #23
 364 00f4 9169     		ldr	r1, [r2, #24]
 260:Core/Src/lcd_stm32f0.c ****         }
 365              		.loc 1 260 25 view .LVU93
 366 00f6 8023     		movs	r3, #128
 367 00f8 5B05     		lsls	r3, r3, #21
 368 00fa 0B43     		orrs	r3, r1
 369 00fc 9361     		str	r3, [r2, #24]
 370 00fe BEE7     		b	.L19
 371              	.L20:
 269:Core/Src/lcd_stm32f0.c ****         }
 372              		.loc 1 269 10 is_stmt 1 view .LVU94
 269:Core/Src/lcd_stm32f0.c ****         }
 373              		.loc 1 269 15 is_stmt 0 view .LVU95
 374 0100 074A     		ldr	r2, .L25+4
 375 0102 9169     		ldr	r1, [r2, #24]
 269:Core/Src/lcd_stm32f0.c ****         }
 376              		.loc 1 269 22 view .LVU96
 377 0104 8023     		movs	r3, #128
 378 0106 9B04     		lsls	r3, r3, #18
ARM GAS  /tmp/cca8jX7X.s 			page 15


 379 0108 0B43     		orrs	r3, r1
 380 010a 9361     		str	r3, [r2, #24]
 381 010c BFE7     		b	.L21
 382              	.L22:
 278:Core/Src/lcd_stm32f0.c ****         }
 383              		.loc 1 278 10 is_stmt 1 view .LVU97
 278:Core/Src/lcd_stm32f0.c ****         }
 384              		.loc 1 278 15 is_stmt 0 view .LVU98
 385 010e 044A     		ldr	r2, .L25+4
 386 0110 9169     		ldr	r1, [r2, #24]
 278:Core/Src/lcd_stm32f0.c ****         }
 387              		.loc 1 278 22 view .LVU99
 388 0112 8023     		movs	r3, #128
 389 0114 5B04     		lsls	r3, r3, #17
 390 0116 0B43     		orrs	r3, r1
 391 0118 9361     		str	r3, [r2, #24]
 392 011a C0E7     		b	.L23
 393              	.L26:
 394              		.align	2
 395              	.L25:
 396 011c 00080048 		.word	1207961600
 397 0120 00040048 		.word	1207960576
 398              		.cfi_endproc
 399              	.LFE42:
 401              		.section	.text.lcd_putstring,"ax",%progbits
 402              		.align	1
 403              		.global	lcd_putstring
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	lcd_putstring:
 409              	.LVL10:
 410              	.LFB43:
 291:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 411              		.loc 1 291 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Src/lcd_stm32f0.c ****     unsigned char count = 0;
 415              		.loc 1 291 1 is_stmt 0 view .LVU101
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              	.LCFI3:
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 4, -16
 420              		.cfi_offset 5, -12
 421              		.cfi_offset 6, -8
 422              		.cfi_offset 14, -4
 423 0002 0500     		movs	r5, r0
 292:Core/Src/lcd_stm32f0.c **** 
 424              		.loc 1 292 5 is_stmt 1 view .LVU102
 425              	.LVL11:
 294:Core/Src/lcd_stm32f0.c ****     {
 426              		.loc 1 294 5 view .LVU103
 292:Core/Src/lcd_stm32f0.c **** 
 427              		.loc 1 292 19 is_stmt 0 view .LVU104
 428 0004 0024     		movs	r4, #0
 294:Core/Src/lcd_stm32f0.c ****     {
ARM GAS  /tmp/cca8jX7X.s 			page 16


 429              		.loc 1 294 11 view .LVU105
 430 0006 03E0     		b	.L28
 431              	.LVL12:
 432              	.L29:
 296:Core/Src/lcd_stm32f0.c **** 	    count++;
 433              		.loc 1 296 6 is_stmt 1 view .LVU106
 434 0008 FFF7FEFF 		bl	lcd_putchar
 435              	.LVL13:
 297:Core/Src/lcd_stm32f0.c **** 	 }
 436              		.loc 1 297 6 view .LVU107
 297:Core/Src/lcd_stm32f0.c **** 	 }
 437              		.loc 1 297 11 is_stmt 0 view .LVU108
 438 000c 0134     		adds	r4, r4, #1
 439              	.LVL14:
 297:Core/Src/lcd_stm32f0.c **** 	 }
 440              		.loc 1 297 11 view .LVU109
 441 000e E4B2     		uxtb	r4, r4
 442              	.LVL15:
 443              	.L28:
 294:Core/Src/lcd_stm32f0.c ****     {
 444              		.loc 1 294 12 is_stmt 1 view .LVU110
 294:Core/Src/lcd_stm32f0.c ****     {
 445              		.loc 1 294 20 is_stmt 0 view .LVU111
 446 0010 285D     		ldrb	r0, [r5, r4]
 294:Core/Src/lcd_stm32f0.c ****     {
 447              		.loc 1 294 12 view .LVU112
 448 0012 0028     		cmp	r0, #0
 449 0014 F8D1     		bne	.L29
 299:Core/Src/lcd_stm32f0.c **** 
 450              		.loc 1 299 1 view .LVU113
 451              		@ sp needed
 452              	.LVL16:
 453              	.LVL17:
 299:Core/Src/lcd_stm32f0.c **** 
 454              		.loc 1 299 1 view .LVU114
 455 0016 70BD     		pop	{r4, r5, r6, pc}
 456              		.cfi_endproc
 457              	.LFE43:
 459              		.section	.text.lcd_command,"ax",%progbits
 460              		.align	1
 461              		.global	lcd_command
 462              		.syntax unified
 463              		.code	16
 464              		.thumb_func
 466              	lcd_command:
 467              	.LVL18:
 468              	.LFB40:
  72:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 469              		.loc 1 72 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 473              		.loc 1 72 1 is_stmt 0 view .LVU116
 474 0000 10B5     		push	{r4, lr}
 475              	.LCFI4:
 476              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cca8jX7X.s 			page 17


 477              		.cfi_offset 4, -8
 478              		.cfi_offset 14, -4
 479 0002 0400     		movs	r4, r0
  73:Core/Src/lcd_stm32f0.c **** 
 480              		.loc 1 73 5 is_stmt 1 view .LVU117
  73:Core/Src/lcd_stm32f0.c **** 
 481              		.loc 1 73 10 is_stmt 0 view .LVU118
 482 0004 474A     		ldr	r2, .L48
 483 0006 9169     		ldr	r1, [r2, #24]
  73:Core/Src/lcd_stm32f0.c **** 
 484              		.loc 1 73 17 view .LVU119
 485 0008 8023     		movs	r3, #128
 486 000a DB05     		lsls	r3, r3, #23
 487 000c 0B43     		orrs	r3, r1
 488 000e 9361     		str	r3, [r2, #24]
  77:Core/Src/lcd_stm32f0.c ****     {
 489              		.loc 1 77 5 is_stmt 1 view .LVU120
  77:Core/Src/lcd_stm32f0.c ****     {
 490              		.loc 1 77 26 is_stmt 0 view .LVU121
 491 0010 43B2     		sxtb	r3, r0
  77:Core/Src/lcd_stm32f0.c ****     {
 492              		.loc 1 77 8 view .LVU122
 493 0012 002B     		cmp	r3, #0
 494 0014 49DB     		blt	.L47
  83:Core/Src/lcd_stm32f0.c ****     }
 495              		.loc 1 83 6 is_stmt 1 view .LVU123
  83:Core/Src/lcd_stm32f0.c ****     }
 496              		.loc 1 83 11 is_stmt 0 view .LVU124
 497 0016 9022     		movs	r2, #144
 498 0018 D205     		lsls	r2, r2, #23
 499 001a 9169     		ldr	r1, [r2, #24]
  83:Core/Src/lcd_stm32f0.c ****     }
 500              		.loc 1 83 18 view .LVU125
 501 001c 8023     		movs	r3, #128
 502 001e 1B06     		lsls	r3, r3, #24
 503 0020 0B43     		orrs	r3, r1
 504 0022 9361     		str	r3, [r2, #24]
 505              	.L32:
  86:Core/Src/lcd_stm32f0.c ****     {
 506              		.loc 1 86 5 is_stmt 1 view .LVU126
  86:Core/Src/lcd_stm32f0.c ****     {
 507              		.loc 1 86 8 is_stmt 0 view .LVU127
 508 0024 6306     		lsls	r3, r4, #25
 509 0026 48D5     		bpl	.L33
  88:Core/Src/lcd_stm32f0.c ****     }
 510              		.loc 1 88 9 is_stmt 1 view .LVU128
  88:Core/Src/lcd_stm32f0.c ****     }
 511              		.loc 1 88 14 is_stmt 0 view .LVU129
 512 0028 9022     		movs	r2, #144
 513 002a D205     		lsls	r2, r2, #23
 514 002c 9169     		ldr	r1, [r2, #24]
  88:Core/Src/lcd_stm32f0.c ****     }
 515              		.loc 1 88 21 view .LVU130
 516 002e 8023     		movs	r3, #128
 517 0030 5B01     		lsls	r3, r3, #5
 518 0032 0B43     		orrs	r3, r1
 519 0034 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cca8jX7X.s 			page 18


 520              	.L34:
  95:Core/Src/lcd_stm32f0.c ****     {
 521              		.loc 1 95 5 is_stmt 1 view .LVU131
  95:Core/Src/lcd_stm32f0.c ****     {
 522              		.loc 1 95 8 is_stmt 0 view .LVU132
 523 0036 A306     		lsls	r3, r4, #26
 524 0038 47D5     		bpl	.L35
  97:Core/Src/lcd_stm32f0.c ****     }
 525              		.loc 1 97 6 is_stmt 1 view .LVU133
  97:Core/Src/lcd_stm32f0.c ****     }
 526              		.loc 1 97 11 is_stmt 0 view .LVU134
 527 003a 3B4A     		ldr	r2, .L48+4
 528 003c 9169     		ldr	r1, [r2, #24]
  97:Core/Src/lcd_stm32f0.c ****     }
 529              		.loc 1 97 18 view .LVU135
 530 003e 8023     		movs	r3, #128
 531 0040 9B00     		lsls	r3, r3, #2
 532 0042 0B43     		orrs	r3, r1
 533 0044 9361     		str	r3, [r2, #24]
 534              	.L36:
 104:Core/Src/lcd_stm32f0.c ****     {
 535              		.loc 1 104 5 is_stmt 1 view .LVU136
 104:Core/Src/lcd_stm32f0.c ****     {
 536              		.loc 1 104 8 is_stmt 0 view .LVU137
 537 0046 E306     		lsls	r3, r4, #27
 538 0048 46D5     		bpl	.L37
 106:Core/Src/lcd_stm32f0.c ****     }
 539              		.loc 1 106 6 is_stmt 1 view .LVU138
 106:Core/Src/lcd_stm32f0.c ****     }
 540              		.loc 1 106 11 is_stmt 0 view .LVU139
 541 004a 374A     		ldr	r2, .L48+4
 542 004c 9169     		ldr	r1, [r2, #24]
 106:Core/Src/lcd_stm32f0.c ****     }
 543              		.loc 1 106 18 view .LVU140
 544 004e 8023     		movs	r3, #128
 545 0050 5B00     		lsls	r3, r3, #1
 546 0052 0B43     		orrs	r3, r1
 547 0054 9361     		str	r3, [r2, #24]
 548              	.L38:
 113:Core/Src/lcd_stm32f0.c **** 
 549              		.loc 1 113 5 is_stmt 1 view .LVU141
 550 0056 FFF7FEFF 		bl	pulse_strobe
 551              	.LVL19:
 116:Core/Src/lcd_stm32f0.c ****     {
 552              		.loc 1 116 5 view .LVU142
 116:Core/Src/lcd_stm32f0.c ****     {
 553              		.loc 1 116 8 is_stmt 0 view .LVU143
 554 005a 2307     		lsls	r3, r4, #28
 555 005c 43D5     		bpl	.L39
 118:Core/Src/lcd_stm32f0.c ****     }
 556              		.loc 1 118 6 is_stmt 1 view .LVU144
 118:Core/Src/lcd_stm32f0.c ****     }
 557              		.loc 1 118 11 is_stmt 0 view .LVU145
 558 005e 9022     		movs	r2, #144
 559 0060 D205     		lsls	r2, r2, #23
 560 0062 9169     		ldr	r1, [r2, #24]
 118:Core/Src/lcd_stm32f0.c ****     }
ARM GAS  /tmp/cca8jX7X.s 			page 19


 561              		.loc 1 118 18 view .LVU146
 562 0064 8023     		movs	r3, #128
 563 0066 1B02     		lsls	r3, r3, #8
 564 0068 0B43     		orrs	r3, r1
 565 006a 9361     		str	r3, [r2, #24]
 566              	.L40:
 125:Core/Src/lcd_stm32f0.c ****     {
 567              		.loc 1 125 5 is_stmt 1 view .LVU147
 125:Core/Src/lcd_stm32f0.c ****     {
 568              		.loc 1 125 8 is_stmt 0 view .LVU148
 569 006c 6307     		lsls	r3, r4, #29
 570 006e 42D5     		bpl	.L41
 127:Core/Src/lcd_stm32f0.c ****     }
 571              		.loc 1 127 9 is_stmt 1 view .LVU149
 127:Core/Src/lcd_stm32f0.c ****     }
 572              		.loc 1 127 14 is_stmt 0 view .LVU150
 573 0070 9022     		movs	r2, #144
 574 0072 D205     		lsls	r2, r2, #23
 575 0074 9169     		ldr	r1, [r2, #24]
 127:Core/Src/lcd_stm32f0.c ****     }
 576              		.loc 1 127 21 view .LVU151
 577 0076 8023     		movs	r3, #128
 578 0078 5B01     		lsls	r3, r3, #5
 579 007a 0B43     		orrs	r3, r1
 580 007c 9361     		str	r3, [r2, #24]
 581              	.L42:
 134:Core/Src/lcd_stm32f0.c ****     {
 582              		.loc 1 134 5 is_stmt 1 view .LVU152
 134:Core/Src/lcd_stm32f0.c ****     {
 583              		.loc 1 134 8 is_stmt 0 view .LVU153
 584 007e A307     		lsls	r3, r4, #30
 585 0080 41D5     		bpl	.L43
 136:Core/Src/lcd_stm32f0.c ****     }
 586              		.loc 1 136 6 is_stmt 1 view .LVU154
 136:Core/Src/lcd_stm32f0.c ****     }
 587              		.loc 1 136 11 is_stmt 0 view .LVU155
 588 0082 294A     		ldr	r2, .L48+4
 589 0084 9169     		ldr	r1, [r2, #24]
 136:Core/Src/lcd_stm32f0.c ****     }
 590              		.loc 1 136 18 view .LVU156
 591 0086 8023     		movs	r3, #128
 592 0088 9B00     		lsls	r3, r3, #2
 593 008a 0B43     		orrs	r3, r1
 594 008c 9361     		str	r3, [r2, #24]
 595              	.L44:
 143:Core/Src/lcd_stm32f0.c ****     {
 596              		.loc 1 143 5 is_stmt 1 view .LVU157
 143:Core/Src/lcd_stm32f0.c ****     {
 597              		.loc 1 143 8 is_stmt 0 view .LVU158
 598 008e E407     		lsls	r4, r4, #31
 599 0090 40D5     		bpl	.L45
 145:Core/Src/lcd_stm32f0.c ****     }
 600              		.loc 1 145 6 is_stmt 1 view .LVU159
 145:Core/Src/lcd_stm32f0.c ****     }
 601              		.loc 1 145 11 is_stmt 0 view .LVU160
 602 0092 254A     		ldr	r2, .L48+4
 603 0094 9169     		ldr	r1, [r2, #24]
ARM GAS  /tmp/cca8jX7X.s 			page 20


 145:Core/Src/lcd_stm32f0.c ****     }
 604              		.loc 1 145 18 view .LVU161
 605 0096 8023     		movs	r3, #128
 606 0098 5B00     		lsls	r3, r3, #1
 607 009a 0B43     		orrs	r3, r1
 608 009c 9361     		str	r3, [r2, #24]
 609              	.L46:
 152:Core/Src/lcd_stm32f0.c ****     delay(3000);
 610              		.loc 1 152 5 is_stmt 1 view .LVU162
 611 009e FFF7FEFF 		bl	pulse_strobe
 612              	.LVL20:
 153:Core/Src/lcd_stm32f0.c **** }
 613              		.loc 1 153 5 view .LVU163
 614 00a2 2248     		ldr	r0, .L48+8
 615 00a4 FFF7FEFF 		bl	delay
 616              	.LVL21:
 154:Core/Src/lcd_stm32f0.c **** 
 617              		.loc 1 154 1 is_stmt 0 view .LVU164
 618              		@ sp needed
 619 00a8 10BD     		pop	{r4, pc}
 620              	.LVL22:
 621              	.L47:
  79:Core/Src/lcd_stm32f0.c ****     }
 622              		.loc 1 79 6 is_stmt 1 view .LVU165
  79:Core/Src/lcd_stm32f0.c ****     }
 623              		.loc 1 79 11 is_stmt 0 view .LVU166
 624 00aa 9022     		movs	r2, #144
 625 00ac D205     		lsls	r2, r2, #23
 626 00ae 9169     		ldr	r1, [r2, #24]
  79:Core/Src/lcd_stm32f0.c ****     }
 627              		.loc 1 79 18 view .LVU167
 628 00b0 8023     		movs	r3, #128
 629 00b2 1B02     		lsls	r3, r3, #8
 630 00b4 0B43     		orrs	r3, r1
 631 00b6 9361     		str	r3, [r2, #24]
 632 00b8 B4E7     		b	.L32
 633              	.L33:
  92:Core/Src/lcd_stm32f0.c ****     }
 634              		.loc 1 92 9 is_stmt 1 view .LVU168
  92:Core/Src/lcd_stm32f0.c ****     }
 635              		.loc 1 92 14 is_stmt 0 view .LVU169
 636 00ba 9022     		movs	r2, #144
 637 00bc D205     		lsls	r2, r2, #23
 638 00be 9169     		ldr	r1, [r2, #24]
  92:Core/Src/lcd_stm32f0.c ****     }
 639              		.loc 1 92 21 view .LVU170
 640 00c0 8023     		movs	r3, #128
 641 00c2 5B05     		lsls	r3, r3, #21
 642 00c4 0B43     		orrs	r3, r1
 643 00c6 9361     		str	r3, [r2, #24]
 644 00c8 B5E7     		b	.L34
 645              	.L35:
 101:Core/Src/lcd_stm32f0.c ****     }
 646              		.loc 1 101 6 is_stmt 1 view .LVU171
 101:Core/Src/lcd_stm32f0.c ****     }
 647              		.loc 1 101 11 is_stmt 0 view .LVU172
 648 00ca 174A     		ldr	r2, .L48+4
ARM GAS  /tmp/cca8jX7X.s 			page 21


 649 00cc 9169     		ldr	r1, [r2, #24]
 101:Core/Src/lcd_stm32f0.c ****     }
 650              		.loc 1 101 18 view .LVU173
 651 00ce 8023     		movs	r3, #128
 652 00d0 9B04     		lsls	r3, r3, #18
 653 00d2 0B43     		orrs	r3, r1
 654 00d4 9361     		str	r3, [r2, #24]
 655 00d6 B6E7     		b	.L36
 656              	.L37:
 110:Core/Src/lcd_stm32f0.c ****     }
 657              		.loc 1 110 6 is_stmt 1 view .LVU174
 110:Core/Src/lcd_stm32f0.c ****     }
 658              		.loc 1 110 11 is_stmt 0 view .LVU175
 659 00d8 134A     		ldr	r2, .L48+4
 660 00da 9169     		ldr	r1, [r2, #24]
 110:Core/Src/lcd_stm32f0.c ****     }
 661              		.loc 1 110 18 view .LVU176
 662 00dc 8023     		movs	r3, #128
 663 00de 5B04     		lsls	r3, r3, #17
 664 00e0 0B43     		orrs	r3, r1
 665 00e2 9361     		str	r3, [r2, #24]
 666 00e4 B7E7     		b	.L38
 667              	.LVL23:
 668              	.L39:
 122:Core/Src/lcd_stm32f0.c ****     }
 669              		.loc 1 122 6 is_stmt 1 view .LVU177
 122:Core/Src/lcd_stm32f0.c ****     }
 670              		.loc 1 122 11 is_stmt 0 view .LVU178
 671 00e6 9022     		movs	r2, #144
 672 00e8 D205     		lsls	r2, r2, #23
 673 00ea 9169     		ldr	r1, [r2, #24]
 122:Core/Src/lcd_stm32f0.c ****     }
 674              		.loc 1 122 18 view .LVU179
 675 00ec 8023     		movs	r3, #128
 676 00ee 1B06     		lsls	r3, r3, #24
 677 00f0 0B43     		orrs	r3, r1
 678 00f2 9361     		str	r3, [r2, #24]
 679 00f4 BAE7     		b	.L40
 680              	.L41:
 131:Core/Src/lcd_stm32f0.c ****     }
 681              		.loc 1 131 9 is_stmt 1 view .LVU180
 131:Core/Src/lcd_stm32f0.c ****     }
 682              		.loc 1 131 14 is_stmt 0 view .LVU181
 683 00f6 9022     		movs	r2, #144
 684 00f8 D205     		lsls	r2, r2, #23
 685 00fa 9169     		ldr	r1, [r2, #24]
 131:Core/Src/lcd_stm32f0.c ****     }
 686              		.loc 1 131 21 view .LVU182
 687 00fc 8023     		movs	r3, #128
 688 00fe 5B05     		lsls	r3, r3, #21
 689 0100 0B43     		orrs	r3, r1
 690 0102 9361     		str	r3, [r2, #24]
 691 0104 BBE7     		b	.L42
 692              	.L43:
 140:Core/Src/lcd_stm32f0.c ****     }
 693              		.loc 1 140 6 is_stmt 1 view .LVU183
 140:Core/Src/lcd_stm32f0.c ****     }
ARM GAS  /tmp/cca8jX7X.s 			page 22


 694              		.loc 1 140 11 is_stmt 0 view .LVU184
 695 0106 084A     		ldr	r2, .L48+4
 696 0108 9169     		ldr	r1, [r2, #24]
 140:Core/Src/lcd_stm32f0.c ****     }
 697              		.loc 1 140 18 view .LVU185
 698 010a 8023     		movs	r3, #128
 699 010c 9B04     		lsls	r3, r3, #18
 700 010e 0B43     		orrs	r3, r1
 701 0110 9361     		str	r3, [r2, #24]
 702 0112 BCE7     		b	.L44
 703              	.L45:
 149:Core/Src/lcd_stm32f0.c ****     }
 704              		.loc 1 149 6 is_stmt 1 view .LVU186
 149:Core/Src/lcd_stm32f0.c ****     }
 705              		.loc 1 149 11 is_stmt 0 view .LVU187
 706 0114 044A     		ldr	r2, .L48+4
 707 0116 9169     		ldr	r1, [r2, #24]
 149:Core/Src/lcd_stm32f0.c ****     }
 708              		.loc 1 149 18 view .LVU188
 709 0118 8023     		movs	r3, #128
 710 011a 5B04     		lsls	r3, r3, #17
 711 011c 0B43     		orrs	r3, r1
 712 011e 9361     		str	r3, [r2, #24]
 713 0120 BDE7     		b	.L46
 714              	.L49:
 715 0122 C046     		.align	2
 716              	.L48:
 717 0124 00080048 		.word	1207961600
 718 0128 00040048 		.word	1207960576
 719 012c B80B0000 		.word	3000
 720              		.cfi_endproc
 721              	.LFE40:
 723              		.section	.text.init_LCD,"ax",%progbits
 724              		.align	1
 725              		.global	init_LCD
 726              		.syntax unified
 727              		.code	16
 728              		.thumb_func
 730              	init_LCD:
 731              	.LFB41:
 168:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 732              		.loc 1 168 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 10B5     		push	{r4, lr}
 737              	.LCFI5:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 4, -8
 740              		.cfi_offset 14, -4
 169:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 741              		.loc 1 169 5 view .LVU190
 169:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 742              		.loc 1 169 8 is_stmt 0 view .LVU191
 743 0002 1B4B     		ldr	r3, .L51
 744 0004 5969     		ldr	r1, [r3, #20]
 169:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
ARM GAS  /tmp/cca8jX7X.s 			page 23


 745              		.loc 1 169 17 view .LVU192
 746 0006 8022     		movs	r2, #128
 747 0008 9202     		lsls	r2, r2, #10
 748 000a 0A43     		orrs	r2, r1
 749 000c 5A61     		str	r2, [r3, #20]
 170:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 750              		.loc 1 170 5 is_stmt 1 view .LVU193
 170:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 751              		.loc 1 170 8 is_stmt 0 view .LVU194
 752 000e 5969     		ldr	r1, [r3, #20]
 170:Core/Src/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 753              		.loc 1 170 17 view .LVU195
 754 0010 8022     		movs	r2, #128
 755 0012 D202     		lsls	r2, r2, #11
 756 0014 0A43     		orrs	r2, r1
 757 0016 5A61     		str	r2, [r3, #20]
 171:Core/Src/lcd_stm32f0.c **** 
 758              		.loc 1 171 5 is_stmt 1 view .LVU196
 171:Core/Src/lcd_stm32f0.c **** 
 759              		.loc 1 171 8 is_stmt 0 view .LVU197
 760 0018 5969     		ldr	r1, [r3, #20]
 171:Core/Src/lcd_stm32f0.c **** 
 761              		.loc 1 171 17 view .LVU198
 762 001a 8022     		movs	r2, #128
 763 001c 1203     		lsls	r2, r2, #12
 764 001e 0A43     		orrs	r2, r1
 765 0020 5A61     		str	r2, [r3, #20]
 173:Core/Src/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 766              		.loc 1 173 5 is_stmt 1 view .LVU199
 173:Core/Src/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 767              		.loc 1 173 10 is_stmt 0 view .LVU200
 768 0022 9022     		movs	r2, #144
 769 0024 D205     		lsls	r2, r2, #23
 770 0026 1168     		ldr	r1, [r2]
 173:Core/Src/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 771              		.loc 1 173 18 view .LVU201
 772 0028 8223     		movs	r3, #130
 773 002a DB05     		lsls	r3, r3, #23
 774 002c 0B43     		orrs	r3, r1
 775 002e 1360     		str	r3, [r2]
 174:Core/Src/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 776              		.loc 1 174 5 is_stmt 1 view .LVU202
 174:Core/Src/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 777              		.loc 1 174 10 is_stmt 0 view .LVU203
 778 0030 104A     		ldr	r2, .L51+4
 779 0032 1168     		ldr	r1, [r2]
 174:Core/Src/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 780              		.loc 1 174 18 view .LVU204
 781 0034 A023     		movs	r3, #160
 782 0036 DB02     		lsls	r3, r3, #11
 783 0038 0B43     		orrs	r3, r1
 784 003a 1360     		str	r3, [r2]
 175:Core/Src/lcd_stm32f0.c **** 
 785              		.loc 1 175 5 is_stmt 1 view .LVU205
 175:Core/Src/lcd_stm32f0.c **** 
 786              		.loc 1 175 10 is_stmt 0 view .LVU206
 787 003c 0E4A     		ldr	r2, .L51+8
ARM GAS  /tmp/cca8jX7X.s 			page 24


 788 003e 1168     		ldr	r1, [r2]
 175:Core/Src/lcd_stm32f0.c **** 
 789              		.loc 1 175 18 view .LVU207
 790 0040 A023     		movs	r3, #160
 791 0042 DB05     		lsls	r3, r3, #23
 792 0044 0B43     		orrs	r3, r1
 793 0046 1360     		str	r3, [r2]
 177:Core/Src/lcd_stm32f0.c **** 
 794              		.loc 1 177 5 is_stmt 1 view .LVU208
 795 0048 0C48     		ldr	r0, .L51+12
 796 004a FFF7FEFF 		bl	delay
 797              	.LVL24:
 179:Core/Src/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 798              		.loc 1 179 5 view .LVU209
 799 004e 3320     		movs	r0, #51
 800 0050 FFF7FEFF 		bl	lcd_command
 801              	.LVL25:
 180:Core/Src/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 802              		.loc 1 180 5 view .LVU210
 803 0054 3220     		movs	r0, #50
 804 0056 FFF7FEFF 		bl	lcd_command
 805              	.LVL26:
 181:Core/Src/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 806              		.loc 1 181 5 view .LVU211
 807 005a 0C20     		movs	r0, #12
 808 005c FFF7FEFF 		bl	lcd_command
 809              	.LVL27:
 182:Core/Src/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 810              		.loc 1 182 5 view .LVU212
 811 0060 2820     		movs	r0, #40
 812 0062 FFF7FEFF 		bl	lcd_command
 813              	.LVL28:
 183:Core/Src/lcd_stm32f0.c **** }
 814              		.loc 1 183 5 view .LVU213
 815 0066 0120     		movs	r0, #1
 816 0068 FFF7FEFF 		bl	lcd_command
 817              	.LVL29:
 184:Core/Src/lcd_stm32f0.c **** 
 818              		.loc 1 184 1 is_stmt 0 view .LVU214
 819              		@ sp needed
 820 006c 10BD     		pop	{r4, pc}
 821              	.L52:
 822 006e C046     		.align	2
 823              	.L51:
 824 0070 00100240 		.word	1073876992
 825 0074 00040048 		.word	1207960576
 826 0078 00080048 		.word	1207961600
 827 007c 30750000 		.word	30000
 828              		.cfi_endproc
 829              	.LFE41:
 831              		.text
 832              	.Letext0:
 833              		.file 2 "/opt/stm32cubeide/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3
 834              		.file 3 "/opt/stm32cubeide/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3
 835              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
ARM GAS  /tmp/cca8jX7X.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 lcd_stm32f0.c
     /tmp/cca8jX7X.s:19     .text.delay:00000000 $t
     /tmp/cca8jX7X.s:25     .text.delay:00000000 delay
     /tmp/cca8jX7X.s:78     .text.pulse_strobe:00000000 $t
     /tmp/cca8jX7X.s:84     .text.pulse_strobe:00000000 pulse_strobe
     /tmp/cca8jX7X.s:138    .text.pulse_strobe:00000034 $d
     /tmp/cca8jX7X.s:143    .text.lcd_putchar:00000000 $t
     /tmp/cca8jX7X.s:149    .text.lcd_putchar:00000000 lcd_putchar
     /tmp/cca8jX7X.s:396    .text.lcd_putchar:0000011c $d
     /tmp/cca8jX7X.s:402    .text.lcd_putstring:00000000 $t
     /tmp/cca8jX7X.s:408    .text.lcd_putstring:00000000 lcd_putstring
     /tmp/cca8jX7X.s:460    .text.lcd_command:00000000 $t
     /tmp/cca8jX7X.s:466    .text.lcd_command:00000000 lcd_command
     /tmp/cca8jX7X.s:717    .text.lcd_command:00000124 $d
     /tmp/cca8jX7X.s:724    .text.init_LCD:00000000 $t
     /tmp/cca8jX7X.s:730    .text.init_LCD:00000000 init_LCD
     /tmp/cca8jX7X.s:824    .text.init_LCD:00000070 $d

NO UNDEFINED SYMBOLS
